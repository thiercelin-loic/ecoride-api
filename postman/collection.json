{
  "info": {
    "name": "Development",
    "description": "Complete API collection for EcoRide carpooling platform",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "{{base_url}}",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.access_token);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "    pm.environment.set('user_email', response.user.email);",
                  "}",
                  "",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has access_token', function () {",
                  "    pm.expect(pm.response.json()).to.have.property('access_token');",
                  "});",
                  "",
                  "pm.test('Response has user data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('user');",
                  "    pm.expect(response.user).to.have.property('id');",
                  "    pm.expect(response.user).to.have.property('email');",
                  "    pm.expect(response.user).to.not.have.property('password');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\",\n  \"email\": \"john.doe+{{$randomInt}}@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"pseudo\": \"johndoe{{$randomInt}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('access_token', response.access_token);",
                  "    pm.environment.set('user_id', response.user.id);",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has access_token', function () {",
                  "    pm.expect(pm.response.json()).to.have.property('access_token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{user_email}}\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with existing user credentials"
          }
        }
      ],
      "description": "Authentication endpoints for user registration and login"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Get all users (admin only)"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Get specific user by ID"
          }
        },
        {
          "name": "Get User by Pseudo",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/search/pseudo/johndoe",
              "host": ["{{base_url}}"],
              "path": ["users", "search", "pseudo", "johndoe"]
            },
            "description": "Find user by pseudo/username"
          }
        },
        {
          "name": "Update User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstname\": \"John\",\n  \"lastname\": \"Smith\",\n  \"preferences\": {\n    \"smokingAllowed\": false,\n    \"animalsAllowed\": true,\n    \"musicAllowed\": false\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Update user profile"
          }
        }
      ],
      "description": "User management endpoints"
    },
    {
      "name": "Cars",
      "item": [
        {
          "name": "Get All Cars",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cars",
              "host": ["{{base_url}}"],
              "path": ["cars"],
              "query": [
                {
                  "key": "model",
                  "value": "Tesla Model 3",
                  "disabled": true
                },
                {
                  "key": "energy",
                  "value": "Electric",
                  "disabled": true
                },
                {
                  "key": "color",
                  "value": "White",
                  "disabled": true
                }
              ]
            },
            "description": "Get all cars with optional filters"
          }
        },
        {
          "name": "Get Car by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cars/1",
              "host": ["{{base_url}}"],
              "path": ["cars", "1"]
            },
            "description": "Get specific car by ID"
          }
        },
        {
          "name": "Create Car",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('car_id', response.id);",
                  "}",
                  "",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"immatriculation\": \"AB-{{$randomInt}}-CD\",\n  \"model\": \"Tesla Model 3\",\n  \"color\": \"White\",\n  \"energy\": \"Electric\",\n  \"availableSeats\": 4,\n  \"brandId\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/cars",
              "host": ["{{base_url}}"],
              "path": ["cars"]
            },
            "description": "Register a new car"
          }
        },
        {
          "name": "Update Car",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"color\": \"Blue\",\n  \"availableSeats\": 3\n}"
            },
            "url": {
              "raw": "{{base_url}}/cars/{{car_id}}",
              "host": ["{{base_url}}"],
              "path": ["cars", "{{car_id}}"]
            },
            "description": "Update car information"
          }
        }
      ],
      "description": "Vehicle management endpoints"
    },
    {
      "name": "Trips (Codriving)",
      "item": [
        {
          "name": "Get All Trips",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/codriving",
              "host": ["{{base_url}}"],
              "path": ["codriving"]
            },
            "description": "Get all available trips"
          }
        },
        {
          "name": "Get Trip by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/codriving/1",
              "host": ["{{base_url}}"],
              "path": ["codriving", "1"]
            },
            "description": "Get specific trip by ID"
          }
        },
        {
          "name": "Create Trip",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('trip_id', response.id);",
                  "}",
                  "",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startLocation\": \"Paris\",\n  \"endLocation\": \"Lyon\",\n  \"startDate\": \"2025-08-15T09:00:00.000Z\",\n  \"endDate\": \"2025-08-15T14:00:00.000Z\",\n  \"seatsAvailable\": 3,\n  \"pricePerSeat\": 25,\n  \"carId\": \"{{car_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/codriving",
              "host": ["{{base_url}}"],
              "path": ["codriving"]
            },
            "description": "Create a new trip"
          }
        },
        {
          "name": "Update Trip",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"pricePerSeat\": 30,\n  \"seatsAvailable\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/codriving/{{trip_id}}",
              "host": ["{{base_url}}"],
              "path": ["codriving", "{{trip_id}}"]
            },
            "description": "Update trip details"
          }
        }
      ],
      "description": "Trip/journey management endpoints"
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "Get My Bookings",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/bookings/my-bookings",
              "host": ["{{base_url}}"],
              "path": ["bookings", "my-bookings"]
            },
            "description": "Get current user's bookings"
          }
        },
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('booking_id', response.id);",
                  "}",
                  "",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"codrivingId\": {{trip_id}},\n  \"creditsUsed\": 25,\n  \"notes\": \"Looking forward to this trip!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/bookings",
              "host": ["{{base_url}}"],
              "path": ["bookings"]
            },
            "description": "Book a trip"
          }
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/bookings/{{booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["bookings", "{{booking_id}}"]
            },
            "description": "Get specific booking by ID"
          }
        },
        {
          "name": "Update Booking",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Updated notes for the trip\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/bookings/{{booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["bookings", "{{booking_id}}"]
            },
            "description": "Update booking information"
          }
        },
        {
          "name": "Confirm Booking (Driver)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "url": {
              "raw": "{{base_url}}/bookings/{{booking_id}}/confirm",
              "host": ["{{base_url}}"],
              "path": ["bookings", "{{booking_id}}", "confirm"]
            },
            "description": "Confirm booking (driver only)"
          }
        },
        {
          "name": "Cancel Booking",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/bookings/{{booking_id}}",
              "host": ["{{base_url}}"],
              "path": ["bookings", "{{booking_id}}"]
            },
            "description": "Cancel a booking"
          }
        }
      ],
      "description": "Booking management endpoints"
    },
    {
      "name": "Search",
      "item": [
        {
          "name": "Search All",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/search?q=paris",
              "host": ["{{base_url}}"],
              "path": ["search"],
              "query": [
                {
                  "key": "q",
                  "value": "paris"
                },
                {
                  "key": "type",
                  "value": "codriving",
                  "disabled": true
                }
              ]
            },
            "description": "Search across all entities"
          }
        },
        {
          "name": "Search Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/search?q=john&type=user",
              "host": ["{{base_url}}"],
              "path": ["search"],
              "query": [
                {
                  "key": "q",
                  "value": "john"
                },
                {
                  "key": "type",
                  "value": "user"
                }
              ]
            },
            "description": "Search for users"
          }
        },
        {
          "name": "Search Cars",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/search?q=tesla&type=car",
              "host": ["{{base_url}}"],
              "path": ["search"],
              "query": [
                {
                  "key": "q",
                  "value": "tesla"
                },
                {
                  "key": "type",
                  "value": "car"
                }
              ]
            },
            "description": "Search for cars"
          }
        },
        {
          "name": "Advanced Trip Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/search/trips?from=Paris&to=Lyon&date=2025-08-15&maxPrice=30&ecological=true",
              "host": ["{{base_url}}"],
              "path": ["search", "trips"],
              "query": [
                {
                  "key": "from",
                  "value": "Paris"
                },
                {
                  "key": "to",
                  "value": "Lyon"
                },
                {
                  "key": "date",
                  "value": "2025-08-15"
                },
                {
                  "key": "maxPrice",
                  "value": "30"
                },
                {
                  "key": "ecological",
                  "value": "true"
                },
                {
                  "key": "minRating",
                  "value": "4.0",
                  "disabled": true
                }
              ]
            },
            "description": "Advanced search for trips with filters"
          }
        }
      ],
      "description": "Search functionality endpoints"
    },
    {
      "name": "Reviews",
      "item": [
        {
          "name": "Get All Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/reviews",
              "host": ["{{base_url}}"],
              "path": ["reviews"]
            },
            "description": "Get all reviews"
          }
        },
        {
          "name": "Create Review",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('review_id', response.id);",
                  "}",
                  "",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 5,\n  \"commentary\": \"Great driver, very punctual and friendly!\",\n  \"revieweeId\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/reviews",
              "host": ["{{base_url}}"],
              "path": ["reviews"]
            },
            "description": "Submit a new review"
          }
        },
        {
          "name": "Update Review",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 4,\n  \"commentary\": \"Updated review: Good driver, comfortable trip.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/reviews/{{review_id}}",
              "host": ["{{base_url}}"],
              "path": ["reviews", "{{review_id}}"]
            },
            "description": "Update an existing review"
          }
        }
      ],
      "description": "Review and rating system endpoints"
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check API health status"
          }
        }
      ],
      "description": "System health and monitoring endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response is JSON', function () {",
          "    pm.response.to.be.json;",
          "});"
        ]
      }
    }
  ]
}
